# Redirect HTTPS to HTTP temporarily
server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    ssl_reject_handshake on;
    return 301 http://$host$request_uri;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
    server_name _;

    # Debug logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log combined buffer=512k flush=1s;

    client_max_body_size 4G;
    
    # Health check endpoint
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy\n';
    }

    location /static/ {
        alias /code/pikatrading/static/;
        access_log off;
        expires 30d;
    }

    location /media/ {
        alias /code/pikatrading/media/;
        access_log off;
        expires 30d;
    }

    location / {
        proxy_pass http://web:8000;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Debug headers
        add_header X-Debug-Message "Proxying to uWSGI" always;
        add_header X-Backend-Server "web:8000" always;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Error handling
        error_page 502 504 = @fallback;
        proxy_intercept_errors on;
    }

    # Fallback handler
    location @fallback {
        add_header Content-Type application/json;
        return 502 '{"error": "Bad Gateway", "message": "Failed to connect to backend server", "backend": "web:8000"}';
    }
}