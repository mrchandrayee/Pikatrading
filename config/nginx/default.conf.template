# HTTP Server
server {
    listen 80;
    listen [::]:80;
    server_name pikatrading.com www.pikatrading.com;

    # Debug logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log combined buffer=512k flush=1s;

    # Certbot challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
# Health check proxy to uWSGI
location = /health {
    include uwsgi_params;
    uwsgi_pass 127.0.0.1:8080;
    access_log off;
    
    # Add timeout for health checks
    uwsgi_read_timeout 5s;
    uwsgi_send_timeout 5s;
    
    # Add headers for proxy health checks
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    
    # Error handling
    error_page 502 504 = @health_fallback;
}

location @health_fallback {
    return 200 'healthy\n';
    add_header Content-Type text/plain;
}


    client_max_body_size 4G;

    location /static/ {
        alias /code/pikatrading/static/;
        access_log off;
        expires 30d;
    }

    location /media/ {
        alias /code/pikatrading/media/;
        access_log off;
        expires 30d;
    }

    location / {
        include uwsgi_params;
        
        # Try HTTP first, fall back to Unix socket
        uwsgi_pass 127.0.0.1:8080;
        error_page 502 = @uwsgi_fallback;
    }
    
    location @uwsgi_fallback {
        include uwsgi_params;
        uwsgi_pass unix:///code/run/uwsgi.sock;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
}