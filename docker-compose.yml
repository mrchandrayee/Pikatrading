services:

  db:
    image: postgres:17.0
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  web:
    build: .
    user: "1000:33"  # Run as uwsgi:www-data
    command: ["/code/wait-for-it.sh", "db:5432", "--",
            "uwsgi", "--ini", "/code/config/uwsgi/uwsgi.ini", "--logger", "file:/dev/stdout"]

    restart: always
    volumes:
      - ./pikatrading/media:/code/pikatrading/media:rw
      - ./pikatrading/static:/code/pikatrading/static:rw
    ports:
      - "127.0.0.1:8000:8000"  # Expose locally for debugging
    environment:
      - PYTHONPATH=/code/pikatrading
      - DJANGO_SETTINGS_MODULE=pikatrading.settings.prod
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
      - DISPLAY=:99
      - PYTHONUNBUFFERED=1
      - DJANGO_LOG_LEVEL=DEBUG
      
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    # Add these capabilities for Playwright
    cap_add:
      - SYS_ADMIN

  nginx:
    image: nginx:1.27.2
    restart: always
    volumes:
      - ./config/nginx/default.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./pikatrading/static:/code/pikatrading/static:ro
      - ./pikatrading/media:/code/pikatrading/media:ro
    ports:
      - "80:80"
    command: nginx -g 'daemon off;'
    depends_on:
      - web
  
  
  rabbitmq:
    restart: always
    image: rabbitmq:4.0-management
    volumes:
      - type: bind
        source: ./config/rabbitmq/rabbitmq.conf
        target: /etc/rabbitmq/conf.d/10-defaults.conf
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
    environment:
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
  
  celery:
    build: .
    working_dir: /code/pikatrading
    command: ["/bin/sh", "-c", "celery -A pikatrading worker -l info --pool=solo & celery -A pikatrading beat --loglevel=info"]
    volumes:
      - ./pikatrading/media:/code/pikatrading/media:rw
      - ./pikatrading/static:/code/pikatrading/static:rw
    environment:
      - PYTHONPATH=/code/pikatrading
      - DJANGO_SETTINGS_MODULE=pikatrading.settings.prod
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - rabbitmq
      - web
